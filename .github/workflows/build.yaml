name: Build

on:
  push:
    branches:
      - "*"
    tags:
      - v*
  pull_request:
    branches:
      - main

env:
  NAME: ilo4-metrics-proxy
  IMAGE_REPOSITORY: quay.io/mdvorak/ilo4-metrics-proxy

jobs:
  version:
    name: Version
    runs-on: ubuntu-latest
    outputs:
      value: ${{ steps.version.outputs.value }}
      is-release: ${{ steps.version.outputs.is-release }}
    steps:
      - name: Get the version
        id: version
        run: |
          if ${{ startsWith(github.ref, 'refs/tags/v') }}; then
            echo "::set-output name=value::${GITHUB_REF#refs/*/v}"
            echo "::set-output name=is-release::true"
          else
            echo "::set-output name=value::0.0.0-$(date +"%Y%m%d%H%M%S")-${GITHUB_SHA::8}"
            echo "::set-output name=is-release::false"
          fi

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Setup
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ~1.15

      # Cache
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Get dependencies
        run: |
          go mod download

      # Test
      - name: Run tests
        run: |
          go test ./...

      # Lint helm
      - name: Helm lint
        run: helm lint deploy/

  image:
    name: Build Image
    runs-on: ubuntu-latest
    needs: [ version, test ]
    env:
      VERSION: ${{ needs.version.outputs.value }}
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Setup
      - name: Login to quay.io
        run: sudo podman login --username '${{ secrets.QUAY_USERNAME }}' --password '${{ secrets.QUAY_PASSWORD }}' quay.io

      # Cache
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      # Build
      - name: Build image
        run: |
          QUAY_EXPIRES_AFTER=1h
          if ${{ needs.version.outputs.is-release }}; then
            QUAY_EXPIRES_AFTER=never
          fi

          sudo podman build . \
            -v ~/go/pkg/mod:/go/pkg/mod:rw \
            --label quay.expires-after=${QUAY_EXPIRES_AFTER} \
            --label org.opencontainers.image.authors='${{ github.actor }}' \
            --label org.opencontainers.image.created="$(date --iso-8601=seconds)" \
            --label org.opencontainers.image.title='${{ env.IMAGE_REPOSITORY }}' \
            --label org.opencontainers.image.source='https://github.com/${{ github.repository }}' \
            --label org.opencontainers.image.revision='${{ github.sha }}' \
            --label org.opencontainers.image.licenses='MIT' \
            --label org.opencontainers.image.description='Simple proxy, providing temperatures from HPE iLO 4 as Prometheus metrics.' \
            -t '${{ env.IMAGE_REPOSITORY }}:${{ env.VERSION }}'

      - name: Push image
        run: sudo podman push '${{ env.IMAGE_REPOSITORY }}:${{ env.VERSION }}'

  # TODO start Kind and try deploying the chart with the built image
  #  deploy:
  #    name: Test Deploy
  #    runs-on: ubuntu-latest
  #    needs: [ version, test, image ]
  #    env:
  #      VERSION: ${{ needs.version.outputs.value }}

  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [ version, test, image ] # Don't publish if test fails
    env:
      VERSION: ${{ needs.version.outputs.value }}
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Release Helm
      - name: Set Helm version
        run: |
          mkdir -p charts/${{ env.NAME }}
          cp -r deploy/ charts/${{ env.NAME }}/
          sed -i 's/^version:.*/version: ${{ env.VERSION }}/g' charts/${{ env.NAME }}/Chart.yaml
          sed -i 's/^appVersion:.*/appVersion: ${{ env.VERSION }}/g' charts/${{ env.NAME }}/Chart.yaml

      - name: Publish Helm chart
        uses: stefanprodan/helm-gh-pages@v1.2.0
        with:
          token: ${{ github.token }}
